CREATE TABLE ROLES (
R_ID    int    NOT NULL,
R_Name  VARCHAR(20) NOT NULL, 
PRIMARY KEY (R_ID)
);
CREATE TABLE ACCOUNTS (
USERNAME VARCHAR(30) NOT NULL,
PASSWORD VARCHAR(30) NOT NULL, 
PRIMARY KEY (USERNAME)
);
ALTER TABLE ACCOUNTS
ADD R_ID int not null;
ALTER TABLE ACCOUNTS
MODIFY FOREIGN KEY (R_ID) REFERENCES ROLES(R_ID);
CREATE TABLE MANAGER(
SSN CHAR(5) NOT NULL PRIMARY KEY,
F_NAME VARCHAR(20) NOT NULL,
M_NAME VARCHAR(20) NOT NULL,
L_NAME VARCHAR(20) NOT NULL,
BIRTH_DATE DATE NOT NULL, 
PHONE VARCHAR(10),
CITY VARCHAR(30),
EMAIL varchar(50), 
GENDER VARCHAR(1),
CONSTRAINT ch_gen CHECK (gender IN ('M', 'F'))
);
CREATE TABLE CUSTOMERS(
SSN CHAR(5) NOT NULL PRIMARY KEY,
F_NAME VARCHAR(20) NOT NULL,
M_NAME VARCHAR(20) NOT NULL,
L_NAME VARCHAR(20) NOT NULL,
BIRTH_DATE DATE NOT NULL, 
PHONE VARCHAR(10),
CITY VARCHAR(30),
EMAIL varchar(50), 
GENDER VARCHAR(1),
CONSTRAINT c_gen CHECK (gender IN ('M', 'F'))
);
CREATE TABLE EMPLOYEES(
SSN CHAR(5) NOT NULL PRIMARY KEY,
F_NAME VARCHAR(20) NOT NULL,
M_NAME VARCHAR(20) NOT NULL,
L_NAME VARCHAR(20) NOT NULL,
BIRTH_DATE DATE NOT NULL, 
PHONE VARCHAR(10) NOT NULL,
CITY VARCHAR(30) NOT NULL,
EMAIL varchar(50) NOT NULL, 
GENDER VARCHAR(1) NOT NULL,
SALARY INT NOT NULL,
CONSTRAINT E_gen CHECK (gender IN ('M', 'F'))
);
ALTER TABLE CUSTOMERS 
MODIFY PHONE VARCHAR(10ALTER TABLE MANAGER 
MODIFY PHONE VARCHAR(10) NOT NULL;
) NOT NULL;
ALTER TABLE MANAGER 
MODIFY CITY VARCHAR(30) NOT NULL;
ALTER TABLE CUSTOMERS 
MODIFY CITY VARCHAR(30) NOT NULL;
ALTER TABLE CUSTOMERS 
MODIFY EMAIL VARCHAR(50) NOT NULL;
ALTER TABLE MANAGER 
MODIFY EMAIL VARCHAR(50) NOT NULL;
ALTER TABLE MANAGER 
MODIFY GENDER VARCHAR(1) NOT NULL;
ALTER TABLE CUSTOMERS 
MODIFY GENDER VARCHAR(1) NOT NULL;
CREATE TABLE APPLICANTS(
SSN CHAR(5) NOT NULL PRIMARY KEY,
F_NAME VARCHAR(20) NOT NULL,
M_NAME VARCHAR(20) NOT NULL,
L_NAME VARCHAR(20) NOT NULL,
BIRTH_DATE DATE NOT NULL, 
PHONE VARCHAR(10) NOT NULL,
CITY VARCHAR(30) NOT NULL,
EMAIL varchar(50) NOT NULL, 
GENDER VARCHAR(1) NOT NULL,
ACADEMIC_LEVEL VARCHAR(30) NOT NULL,
WORKING_HOURS VARCHAR(10) NOT NULL,
CONSTRAINT A_gen CHECK (gender IN ('M', 'F'))
);
create table ALL_SSN(
SSN VARCHAR(5) NOT NULL PRIMARY KEY
);
ALTER TABLE ALL_SSN
MODIFY SSN CHAR(5);
ALTER TABLE MANAGER
MODIFY FOREIGN KEY (SSN) REFERENCES ALL_SSN(SSN);
ALTER TABLE CUSTOMERS
MODIFY FOREIGN KEY (SSN) REFERENCES ALL_SSN(SSN);
ALTER TABLE EMPLOYEES
MODIFY FOREIGN KEY (SSN) REFERENCES ALL_SSN(SSN);
ALTER TABLE APPLICANTS
MODIFY FOREIGN KEY (SSN) REFERENCES ALL_SSN(SSN);
ALTER TABLE ACCOUNTS
ADD SSN CHAR(5) NOT NULL;
ALTER TABLE ACCOUNTS
MODIFY FOREIGN KEY (SSN) REFERENCES ALL_SSN(SSN);
CREATE TABLE LANGUAGES (
SSN CHAR(5) NOT NULL,
LANGUAGEsp varchar(20) not null,
foreign key (ssn) references applicants(ssn) on delete cascade,
primary key (ssn, languagesp)
);
CREATE TABLE working_days (
SSN CHAR(5) NOT NULL,
wday varchar(20) not null,
foreign key (ssn) references applicants(ssn) on delete cascade,
primary key (ssn, wday)
);
CREATE TABLE books (
isbn CHAR(4) NOT NULL primary key,
Title varchar(30) not null,
Book_Image blob not null,
author varchar(30) not null,
b_description varchar(300) not null,
price int not null,
quantity int not null,
b_language varchar(20) not null
);
CREATE TABLE CARTS (
C_ID INT NOT NULL,
ssn char(5) not null,
c_date date not null,
t_price int not null,
primary key (c_id),
foreign key (ssn) references customers(ssn)
);
CREATE TABLE CARTS (
C_ID NUMBER GENERATED ALWAYS as IDENTITY(START with 1 INCREMENT by 1),
ssn char(5) not null,
c_date date not null,
t_price int not null,
primary key (c_id),
foreign key (ssn) references customers(ssn)
);
CREATE TABLE items (
C_ID NUMBER not null,
isbn char(4) not null,
quantity int not null,
primary key (c_id, isbn),
foreign key (isbn) references books(isbn),
foreign key (c_id) references carts(c_id)
);
CREATE TABLE suggestions (
s_no NUMBER GENERATED ALWAYS as IDENTITY(START with 1 INCREMENT by 1),
ssn char(5) not null,
isbn char(4) not null,
title varchar(30) not null,
author varchar(30) not null,
s_date date not null,
primary key (s_no),
foreign key (ssn) references customers(ssn)
);







